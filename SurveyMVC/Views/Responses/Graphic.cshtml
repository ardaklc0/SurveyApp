@model GraphicViewModel

<h2>Graphs are belong to survey that is created at: @Model.Survey.CreationDate and has name: "@Model.Survey.Title"</h2>
<h3>Aim of the survey is "@Model.Survey.Description"</h3>
<hr class="border-top border-dark">

<h4>Questions were:</h4>
<ul class="list-group">
    @foreach (var item in Model.Questions)
    {
        <li class="list-group-item">@item.Text</li>
    }
</ul>

<hr class="border-top border-dark">
<div class="row">
    @foreach (var item in Model.Questions)
    {
        if (Model.Questions.Count() == 1)
        {
            <div class="col-md-12">
                <div id="container_@item.Id" style="width: 100%; height: 400px;"></div>
            </div>
            
        }
        <div class="col-md-6">
            <div id="container_@item.Id" style="width: 100%; height: 400px;"></div>
        </div>
    }
</div>


@section Scripts{
    <script>
        document.addEventListener('DOMContentLoaded', function () {
        @foreach (var item in Model.Questions)
        {
            <text>
                const chart_@item.Id = Highcharts.chart('container_@item.Id', {
                    chart: {
                        plotBackgroundColor: null,
                        plotBorderWidth: null,
                        plotShadow: false,
                        type: 'pie'
                    },
                    title: {
                        text: '@item.Text',
                    },
                    tooltip: {
                        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
                    },
                    accessibility: {
                        point: {
                            valueSuffix: '%'
                        }
                    },
                    plotOptions: {
                        pie: {
                            allowPointSelect: true,
                            cursor: 'pointer',
                            dataLabels: {
                                enabled: true,
                                format: '<b>{point.name}</b>: {point.percentage:.1f} %'
                            }
                        }
                    },
                    series: [{
                        data: [
                            @foreach (var response in Model.CountEachResponses(item.Id))
                            {
                                <text>
                                    {
                                        name: '@response.Key',
                                        y: @response.Value,
                                    },
                                </text>
                            }
                        ]
                    }]
                });
            </text>
        }
        });     
    </script>
}


