@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using SurveyMVC.ViewComponents
@model ResponsesViewModel

@{
    ViewData["Title"] = "Index";
}

<div class="row">
    <div class="col-md-6">
        <h2 class="mb-3">@Model.Survey.Title</h2>
        <h3 class="mb-3">@Model.Survey.Description</h3>
    </div>
    <div class="col-md-6">
        <form method="get" asp-controller="Responses" asp-action="Index">
            <div class="form-row">
                <div class="col-md-8 mb-3">
                    <label for="surveyId">Survey ID:</label>
                    <input class="form-control" type="text" id="surveyId" name="surveyId" />
                </div>
                <div class="col-md-4">
                    <button class="btn btn-primary" type="submit">Get Responses</button>
                </div>
            </div>
        </form>
    </div>
</div>
<h4>
    There are @Model.Responses.Count() responses to the survey.
</h4>

<hr class="border-top border-dark">

@{
    int itemCount = Model.ResponseNumber();
}

<table class="table">
    <thead>
        <tr>
            @{  
                for (int i = 1; i <= itemCount; i++)
                {
                            <th>Question @i </th>   
                }
            }
            <th>
                Answer Date
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Responses) {
        <tr>    
            @await Component.InvokeAsync(typeof(ResponseViewComponent), new {item = item})
            <td>
                @Html.DisplayFor(modelItem => item.AnswerDate)
            </td>
            <td>
                @Html.ActionLink("Delete", "Delete", new { id=item.Id })
            </td>
        </tr>
}
    </tbody>
</table>

<h4>To see analysis about your survey <a asp-controller="Responses" asp-action="Graphic" asp-route-surveyId = "@Model.Survey.Id">click here</a></h4>


